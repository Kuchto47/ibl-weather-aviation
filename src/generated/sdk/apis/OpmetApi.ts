/* tslint:disable */
/* eslint-disable */
/**
 * IBL API
 * IBL API for weather info.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  OpmetRequestDTO,
  OpmetResponseDTO,
} from '../models/index';
import {
    OpmetRequestDTOFromJSON,
    OpmetRequestDTOToJSON,
    OpmetResponseDTOFromJSON,
    OpmetResponseDTOToJSON,
} from '../models/index';

export interface GetWeatherInfoRequest {
    opmetRequestDTO: OpmetRequestDTO;
}

/**
 * 
 */
export class OpmetApi extends runtime.BaseAPI {

    /**
     * Request weather data for given airports and/or countries.
     * Post an opmet query.
     */
    async getWeatherInfoRaw(requestParameters: GetWeatherInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OpmetResponseDTO>> {
        if (requestParameters.opmetRequestDTO === null || requestParameters.opmetRequestDTO === undefined) {
            throw new runtime.RequiredError('opmetRequestDTO','Required parameter requestParameters.opmetRequestDTO was null or undefined when calling getWeatherInfo.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/opmetquery`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: OpmetRequestDTOToJSON(requestParameters.opmetRequestDTO),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OpmetResponseDTOFromJSON(jsonValue));
    }

    /**
     * Request weather data for given airports and/or countries.
     * Post an opmet query.
     */
    async getWeatherInfo(requestParameters: GetWeatherInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OpmetResponseDTO> {
        const response = await this.getWeatherInfoRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
