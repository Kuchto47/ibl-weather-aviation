/* tslint:disable */
/* eslint-disable */
/**
 * IBL API
 * IBL API for weather info.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Result
 * @export
 * @interface OpmetResponseResultDTO
 */
export interface OpmetResponseResultDTO {
    /**
     * 
     * @type {string}
     * @memberof OpmetResponseResultDTO
     */
    placeId?: string;
    /**
     * 
     * @type {string}
     * @memberof OpmetResponseResultDTO
     */
    queryType: OpmetResponseResultDTOQueryTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof OpmetResponseResultDTO
     */
    receptionTime?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof OpmetResponseResultDTO
     */
    refs?: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof OpmetResponseResultDTO
     */
    reportTime: Date;
    /**
     * 
     * @type {string}
     * @memberof OpmetResponseResultDTO
     */
    reportType?: string;
    /**
     * 
     * @type {string}
     * @memberof OpmetResponseResultDTO
     */
    revision?: string;
    /**
     * 
     * @type {string}
     * @memberof OpmetResponseResultDTO
     */
    stationId: string;
    /**
     * 
     * @type {string}
     * @memberof OpmetResponseResultDTO
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof OpmetResponseResultDTO
     */
    textHTML?: string;
}


/**
 * @export
 */
export const OpmetResponseResultDTOQueryTypeEnum = {
    Metar: 'METAR',
    Sigmet: 'SIGMET',
    TafLongtaf: 'TAF_LONGTAF'
} as const;
export type OpmetResponseResultDTOQueryTypeEnum = typeof OpmetResponseResultDTOQueryTypeEnum[keyof typeof OpmetResponseResultDTOQueryTypeEnum];


/**
 * Check if a given object implements the OpmetResponseResultDTO interface.
 */
export function instanceOfOpmetResponseResultDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "queryType" in value;
    isInstance = isInstance && "reportTime" in value;
    isInstance = isInstance && "stationId" in value;
    isInstance = isInstance && "text" in value;

    return isInstance;
}

export function OpmetResponseResultDTOFromJSON(json: any): OpmetResponseResultDTO {
    return OpmetResponseResultDTOFromJSONTyped(json, false);
}

export function OpmetResponseResultDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpmetResponseResultDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'placeId': !exists(json, 'placeId') ? undefined : json['placeId'],
        'queryType': json['queryType'],
        'receptionTime': !exists(json, 'receptionTime') ? undefined : (new Date(json['receptionTime'])),
        'refs': !exists(json, 'refs') ? undefined : json['refs'],
        'reportTime': (new Date(json['reportTime'])),
        'reportType': !exists(json, 'reportType') ? undefined : json['reportType'],
        'revision': !exists(json, 'revision') ? undefined : json['revision'],
        'stationId': json['stationId'],
        'text': json['text'],
        'textHTML': !exists(json, 'textHTML') ? undefined : json['textHTML'],
    };
}

export function OpmetResponseResultDTOToJSON(value?: OpmetResponseResultDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'placeId': value.placeId,
        'queryType': value.queryType,
        'receptionTime': value.receptionTime === undefined ? undefined : (value.receptionTime.toISOString()),
        'refs': value.refs,
        'reportTime': (value.reportTime.toISOString()),
        'reportType': value.reportType,
        'revision': value.revision,
        'stationId': value.stationId,
        'text': value.text,
        'textHTML': value.textHTML,
    };
}

