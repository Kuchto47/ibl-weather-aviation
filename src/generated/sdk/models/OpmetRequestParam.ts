/* tslint:disable */
/* eslint-disable */
/**
 * IBL API
 * IBL API for weather info.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Query param
 * @export
 * @interface OpmetRequestParam
 */
export interface OpmetRequestParam {
    /**
     * 
     * @type {string}
     * @memberof OpmetRequestParam
     */
    id: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof OpmetRequestParam
     */
    reportTypes: Array<OpmetRequestParamReportTypesEnum>;
    /**
     * 
     * @type {Array<string>}
     * @memberof OpmetRequestParam
     */
    stations?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof OpmetRequestParam
     */
    countries?: Array<string>;
}


/**
 * @export
 */
export const OpmetRequestParamReportTypesEnum = {
    Metar: 'METAR',
    Sigmet: 'SIGMET',
    TafLongtaf: 'TAF_LONGTAF'
} as const;
export type OpmetRequestParamReportTypesEnum = typeof OpmetRequestParamReportTypesEnum[keyof typeof OpmetRequestParamReportTypesEnum];


/**
 * Check if a given object implements the OpmetRequestParam interface.
 */
export function instanceOfOpmetRequestParam(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "reportTypes" in value;

    return isInstance;
}

export function OpmetRequestParamFromJSON(json: any): OpmetRequestParam {
    return OpmetRequestParamFromJSONTyped(json, false);
}

export function OpmetRequestParamFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpmetRequestParam {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'reportTypes': json['reportTypes'],
        'stations': !exists(json, 'stations') ? undefined : json['stations'],
        'countries': !exists(json, 'countries') ? undefined : json['countries'],
    };
}

export function OpmetRequestParamToJSON(value?: OpmetRequestParam | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'reportTypes': value.reportTypes,
        'stations': value.stations,
        'countries': value.countries,
    };
}

